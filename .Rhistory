shiny::runApp()
runApp()
URL <- getURL("https://raw.githubusercontent.com/opencovid19-fr/data/master/dist/chiffres-cles.csv")
URL<-URL%>%paste(collapse = "")%>%stringr::str_extract("href=.*?csv")%>%gsub("href=\"","",.)
URL <- getURL("https://raw.githubusercontent.com/opencovid19-fr/data/master/dist/chiffres-cles.csv")
URL<-getURL(URL)
URL <- getURL("https://raw.githubusercontent.com/opencovid19-fr/data/master/dist/chiffres-cles.csv")
URL<-getURL(URL)
data <- read.csv2(text = URL, check.names = F,stringsAsFactors = F)
data
data <- read.csv(text = URL, check.names = F,stringsAsFactors = F)
names(data)
data<- unique(data)
table(data$granularite)
data<-data%>%filter(granularite==departement )
data<-data%>%filter(granularite=="departement" )
# Ajout des dates manquantes
data$jour<- data$date
data$date[1]
data$hosp<-data$hospitalises
data$rea<-data$reanimation
data$maille_code
data$dep<- gsub("DEP-","",data$maille_code)
data_cas<-data%>%select(dep,jour,hosp)%>%pivot_wider(id_cols =  dep, names_from = jour, values_from = hosp)
data_dec<-data%>%select(dep,jour,dc)%>%pivot_wider(id_cols =  dep, names_from = jour, values_from = dc)
data_rea<-data%>%select(dep,jour,rea)%>%pivot_wider(id_cols =  dep, names_from = jour, values_from = rea)
data%>%filter(!is.na(hosp))%>%filter(!duplicated(dep,jour))
data_cas<-data%>%filter(!is.na(hosp))%>%filter(!duplicated(dep,jour))%>%select(dep,jour,hosp)%>%pivot_wider(id_cols =  dep, names_from = jour, values_from = hosp)
data_dec<-data%>%filter(!is.na(dc))%>%filter(!duplicated(dep,jour))%>%select(dep,jour,dc)%>%pivot_wider(id_cols =  dep, names_from = jour, values_from = dc)
data$dc<-data$deces
data$rea<-data$reanimation
data_rea<-data%>%filter(!is.na(rea))%>%filter(!duplicated(dep,jour))%>%select(dep,jour,rea)%>%pivot_wider(id_cols =  dep, names_from = jour, values_from = rea)
data_dec<-data%>%filter(!is.na(dc))%>%filter(!duplicated(dep,jour))%>%select(dep,jour,dc)%>%pivot_wider(id_cols =  dep, names_from = jour, values_from = dc)
data_cas
runApp()
data_cas%>%select()
data_rea%>%select()
data_dec%>%select()
data_cas[,2]<-ifelse(is.na(data_cas[,2]),0,data_cas[,2]%>%unlist)
data_dec[,2]<-ifelse(is.na(data_dec[,2]),0,data_dec[,2]%>%unlist)
for(i in 3: dim(data_cas)[2]) data_cas[,i]<- ifelse(is.na(data_cas[,i]), data_cas[,i-1]%>%unlist,data_cas[,i]%>%unlist)
for(i in 3: dim(data_dec)[2]) data_dec[,i]<- ifelse(is.na(data_dec[,i]), data_dec[,i-1]%>%unlist,data_dec[,i]%>%unlist)
data_rea%>%select()
datamaille_code<-function(data=data_cas) return(data)
jour<-names(data_cas%>%select(contains( "-")))
jourDate<- as.Date(jour)
names(data_cas)[str_detect(names(data_cas), "-")]<-format.Date(jourDate, "%m/%d/%y")
names(data_dec)[str_detect(names(data_dec), "-")]<-format.Date(jourDate, "%m/%d/%y")
dateMin<- min(jourDate)
countries$code_insee
data_cas<-left_join(population,data_cas,
by=c( "maille_code"="dep"))
# save(countries, file="shapeFile.RData")
load("shapeFile.RData")
#population<- read.csv2("pop.csv",stringsAsFactors = F)
# save(population, file="pop.RData")
load("pop.RData")
datamaille_code<-function(data=data_cas) return(data)
jour<-names(data_cas%>%select(contains( "-")))
jourDate<- as.Date(jour)
names(data_cas)[str_detect(names(data_cas), "-")]<-format.Date(jourDate, "%m/%d/%y")
names(data_dec)[str_detect(names(data_dec), "-")]<-format.Date(jourDate, "%m/%d/%y")
dateMin<- min(jourDate)
jourDate<- as.Date(jour)
jourDate
jour<-names(data_cas%>%select(contains( "-")))
jour
#Test1
library(shiny)
library(leaflet)
library(RColorBrewer)
library(rgdal)
library(RCurl)
library(plotly)
library(viridis)
library(tidyverse)
library(lubridate)
variable <-F
URL <- getURL("https://raw.githubusercontent.com/opencovid19-fr/data/master/dist/chiffres-cles.csv")
data <- read.csv(text = URL, check.names = F,stringsAsFactors = F)
# data<-data%>%filter(sexe == 0)%>%select(-sexe)
data<-data%>%filter(granularite=="departement" )
data<- unique(data)
# Ajout des dates manquantes
data$jour<- data$date
dates<-unique(as.Date(data$jour,format="%Y-%m-%d"))
data$hosp<-data$hospitalises
data$dc<-data$deces
data$rea<-data$reanimation
data$dep<- gsub("DEP-","",data$maille_code)
data_cas<-data%>%filter(!is.na(hosp))%>%filter(!duplicated(dep,jour))%>%select(dep,jour,hosp)%>%pivot_wider(id_cols =  dep, names_from = jour, values_from = hosp)
data_dec<-data%>%filter(!is.na(dc))%>%filter(!duplicated(dep,jour))%>%select(dep,jour,dc)%>%pivot_wider(id_cols =  dep, names_from = jour, values_from = dc)
data_rea<-data%>%filter(!is.na(rea))%>%filter(!duplicated(dep,jour))%>%select(dep,jour,rea)%>%pivot_wider(id_cols =  dep, names_from = jour, values_from = rea)
data_cas[,2]<-ifelse(is.na(data_cas[,2]),0,data_cas[,2]%>%unlist)
data_dec[,2]<-ifelse(is.na(data_dec[,2]),0,data_dec[,2]%>%unlist)
for(i in 3: dim(data_cas)[2]) data_cas[,i]<- ifelse(is.na(data_cas[,i]), data_cas[,i-1]%>%unlist,data_cas[,i]%>%unlist)
for(i in 3: dim(data_dec)[2]) data_dec[,i]<- ifelse(is.na(data_dec[,i]), data_dec[,i-1]%>%unlist,data_dec[,i]%>%unlist)
# names(data)
url <- "https://twitter.com/intent/tweet?url=https://thibautfabacher.shinyapps.io/covid-france"
#
# https://www.data.gouv.fr/fr/datasets/contours-des-departements-francais-issus-d-openstreetmap/
#countries <- readOGR(dsn ="departements-20140306-5m-shp",
# encoding = "utf-8",use_iconv = T,
# verbose = FALSE)
# save(countries, file="shapeFile.RData")
load("shapeFile.RData")
#https://en.wikipedia.org/wiki/List_of_countries_and_dependencies_by_population
#population<- read.csv2("pop.csv",stringsAsFactors = F)
# save(population, file="pop.RData")
load("pop.RData")
datamaille_code<-function(data=data_cas) return(data)
jour<-names(data_cas%>%select(contains( "-")))
jourDate<- as.Date(jour)
names(data_cas)[str_detect(names(data_cas), "-")]<-format.Date(jourDate, "%m/%d/%y")
names(data_dec)[str_detect(names(data_dec), "-")]<-format.Date(jourDate, "%m/%d/%y")
dateMin<- mi
jourDate
dateMin<- min(jourDate)
data_cas
URL <- getURL("https://raw.githubusercontent.com/opencovid19-fr/data/master/dist/chiffres-cles.csv")
data <- read.csv(text = URL, check.names = F,stringsAsFactors = F)
# data<-data%>%filter(sexe == 0)%>%select(-sexe)
data<-data%>%filter(granularite=="departement" )
data<- unique(data)
# Ajout des dates manquantes
data$jour<- data$date
dates<-unique(as.Date(data$jour,format="%Y-%m-%d"))
data$hosp<-data$hospitalises
data$dc<-data$deces
data$rea<-data$reanimation
data$dep<- gsub("DEP-","",data$maille_code)
data[!is.na(data$hospitalises),]
fr
URL <- getURL("https://www.data.gouv.fr/fr/datasets/r/b94ba7af-c0d6-4055-a883-61160e412115")
URL<-URL%>%paste(collapse = "")%>%stringr::str_extract("href=.*?csv")%>%gsub("href=\"","",.)
URL<-getURL(URL)
runApp()
runApp()
runApp()
rsconnect::deployApp()
shiny::runApp()
runApp()
runApp()
#Test1
library(shiny)
library(leaflet)
library(RColorBrewer)
library(rgdal)
library(RCurl)
library(plotly)
library(viridis)
library(tidyverse)
library(lubridate)
variable <-F
URL <- getURL("https://www.data.gouv.fr/fr/datasets/r/eceb9fb4-3ebc-4da3-828d-f5939712600a")
URL<-URL%>%paste(collapse = "")%>%stringr::str_extract("href=.*?csv")%>%gsub("href=\"","",.)
URL<-getURL(URL)
data1 <- read.csv(text = URL, check.names = F,stringsAsFactors = F)
data1<-data1%>%filter(sursaud_cl_age_corona == 0)%>%select(dep,nbre_hospit_corona, date_de_passage)
data1$date_de_passage<-as.Date(data1$date_de_passage)
data1<-data1%>%group_by(dep)%>% mutate(nbre_hospit_corona= cumsum(nbre_hospit_corona))
URL <- getURL("https://www.data.gouv.fr/fr/datasets/r/63352e38-d353-4b54-bfd1-f1b3ee1cabd7")
URL<-URL%>%paste(collapse = "")%>%stringr::str_extract("href=.*?csv")%>%gsub("href=\"","",.)
URL<-getURL(URL)
data <- read.csv2(text = URL, check.names = F,stringsAsFactors = F)
data<-data%>%filter(sexe == 0)%>%select(-sexe)
data<- unique(data)
# Ajout des dates manquantes
dates<-unique(as.Date(data$jour,format="%Y-%m-%d"))
data_cas<-data1%>%as.data.frame()%>%select(dep,jour = date_de_passage,hosp=nbre_hospit_corona)%>%pivot_wider(id_cols =  dep, names_from = jour, values_from = hosp)
data_dec<-data%>%select(dep,jour,dc)%>%pivot_wider(id_cols =  dep, names_from = jour, values_from = dc)
data_rea<-data%>%select(dep,jour,rea)%>%pivot_wider(id_cols =  dep, names_from = jour, values_from = rea)
data_cas[,2]<-ifelse(is.na(data_cas[,2]),0,data_cas[,2]%>%unlist)
data_dec[,2]<-ifelse(is.na(data_dec[,2]),0,data_dec[,2]%>%unlist)
data_rea[,2]<-ifelse(is.na(data_rea[,2]),0,data_rea[,2]%>%unlist)
for(i in 3: dim(data_cas)[2]) data_cas[,i]<- ifelse(is.na(data_cas[,i]), data_cas[,i-1]%>%unlist,data_cas[,i]%>%unlist)
for(i in 3: dim(data_dec)[2]) data_dec[,i]<- ifelse(is.na(data_dec[,i]), data_dec[,i-1]%>%unlist,data_dec[,i]%>%unlist)
for(i in 3: dim(data_rea)[2]) data_rea[,i]<- ifelse(is.na(data_rea[,i]), data_rea[,i-1]%>%unlist,data_rea[,i]%>%unlist)
# names(data)
url <- "https://twitter.com/intent/tweet?url=https://thibautfabacher.shinyapps.io/covid-france"
# save(countries, file="shapeFile.RData")
load("shapeFile.RData")
#population<- read.csv2("pop.csv",stringsAsFactors = F)
# save(population, file="pop.RData")
load("pop.RData")
datamaille_code<-function(data=data_cas) return(data)
jour<-names(data_cas%>%select(contains( "-")))
jourDate<- as.Date(jour)
jour2<-names(data_dec%>%select(contains( "-")))
jourDate2<- as.Date(jour2)
names(data_cas)[str_detect(names(data_cas), "-")]<-format.Date(jourDate, "%m/%d/%y")
names(data_dec)[str_detect(names(data_dec), "-")]<-format.Date(names(data_dec%>%select(contains( "-")))%>%as.Date(), "%m/%d/%y")
names(data_rea)[str_detect(names(data_rea), "-")]<-format.Date(names(data_rea%>%select(contains( "-")))%>%as.Date(), "%m/%d/%y")
dateMin1<- min(jourDate)
dateMin2<- min(jourDate2)
countries$code_insee
data_cas<-left_join(population,data_cas,
by=c( "maille_code"="dep"))
data_dec<-left_join(population,data_dec,
by=c( "maille_code"="dep"))
data_rea<-left_join(population,data_rea,
by=c( "maille_code"="dep"))
arrondi<- function(x) 10^(ceiling(log10(x)))
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
dateMin
#Test1
library(shiny)
library(leaflet)
library(RColorBrewer)
library(rgdal)
library(RCurl)
library(plotly)
library(viridis)
library(tidyverse)
library(lubridate)
variable <-F
URL <- getURL("https://www.data.gouv.fr/fr/datasets/r/eceb9fb4-3ebc-4da3-828d-f5939712600a")
URL<-URL%>%paste(collapse = "")%>%stringr::str_extract("href=.*?csv")%>%gsub("href=\"","",.)
URL<-getURL(URL)
data1 <- read.csv(text = URL, check.names = F,stringsAsFactors = F)
data1<-data1%>%filter(sursaud_cl_age_corona == 0)%>%select(dep,nbre_hospit_corona, date_de_passage)
data1$date_de_passage<-as.Date(data1$date_de_passage)
data1<-data1%>%group_by(dep)%>% mutate(nbre_hospit_corona= cumsum(nbre_hospit_corona))
URL <- getURL("https://www.data.gouv.fr/fr/datasets/r/63352e38-d353-4b54-bfd1-f1b3ee1cabd7")
URL<-URL%>%paste(collapse = "")%>%stringr::str_extract("href=.*?csv")%>%gsub("href=\"","",.)
URL<-getURL(URL)
data <- read.csv2(text = URL, check.names = F,stringsAsFactors = F)
data<-data%>%filter(sexe == 0)%>%select(-sexe)
data<- unique(data)
# Ajout des dates manquantes
dates<-unique(as.Date(data$jour,format="%Y-%m-%d"))
data_cas<-data1%>%as.data.frame()%>%select(dep,jour = date_de_passage,hosp=nbre_hospit_corona)%>%pivot_wider(id_cols =  dep, names_from = jour, values_from = hosp)
data_dec<-data%>%select(dep,jour,dc)%>%pivot_wider(id_cols =  dep, names_from = jour, values_from = dc)
data_rea<-data%>%select(dep,jour,rea)%>%pivot_wider(id_cols =  dep, names_from = jour, values_from = rea)
data_cas[,2]<-ifelse(is.na(data_cas[,2]),0,data_cas[,2]%>%unlist)
data_dec[,2]<-ifelse(is.na(data_dec[,2]),0,data_dec[,2]%>%unlist)
data_rea[,2]<-ifelse(is.na(data_rea[,2]),0,data_rea[,2]%>%unlist)
for(i in 3: dim(data_cas)[2]) data_cas[,i]<- ifelse(is.na(data_cas[,i]), data_cas[,i-1]%>%unlist,data_cas[,i]%>%unlist)
for(i in 3: dim(data_dec)[2]) data_dec[,i]<- ifelse(is.na(data_dec[,i]), data_dec[,i-1]%>%unlist,data_dec[,i]%>%unlist)
for(i in 3: dim(data_rea)[2]) data_rea[,i]<- ifelse(is.na(data_rea[,i]), data_rea[,i-1]%>%unlist,data_rea[,i]%>%unlist)
# names(data)
url <- "https://twitter.com/intent/tweet?url=https://thibautfabacher.shinyapps.io/covid-france"
#
# https://www.data.gouv.fr/fr/datasets/contours-des-departements-francais-issus-d-openstreetmap/
#countries <- readOGR(dsn ="departements-20140306-5m-shp",
# encoding = "utf-8",use_iconv = T,
# verbose = FALSE)
# save(countries, file="shapeFile.RData")
load("shapeFile.RData")
#https://en.wikipedia.org/wiki/List_of_countries_and_dependencies_by_population
#population<- read.csv2("pop.csv",stringsAsFactors = F)
# save(population, file="pop.RData")
load("pop.RData")
datamaille_code<-function(data=data_cas) return(data)
jour<-names(data_cas%>%select(contains( "-")))
jourDate<- as.Date(jour)
jour2<-names(data_dec%>%select(contains( "-")))
jourDate2<- as.Date(jour2)
names(data_cas)[str_detect(names(data_cas), "-")]<-format.Date(jourDate, "%m/%d/%y")
names(data_dec)[str_detect(names(data_dec), "-")]<-format.Date(names(data_dec%>%select(contains( "-")))%>%as.Date(), "%m/%d/%y")
names(data_rea)[str_detect(names(data_rea), "-")]<-format.Date(names(data_rea%>%select(contains( "-")))%>%as.Date(), "%m/%d/%y")
dateMin1<- min(jourDate)
dateMin<-dateMin1
dateMin2<- min(jourDate2)
countries$code_insee
data_cas<-left_join(population,data_cas,
by=c( "maille_code"="dep"))
data_dec<-left_join(population,data_dec,
by=c( "maille_code"="dep"))
data_rea<-left_join(population,data_rea,
by=c( "maille_code"="dep"))
arrondi<- function(x) 10^(ceiling(log10(x)))
dateMin
dateMin%>%str
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
